name: yangss_dotnet

on:
  workflow_dispatch:
  push:
    branches: [ yangss ]
#  pull_request:
#    branches: [ yangss ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: yangss
    - name: test_print
      run: echo Hello, world!
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
#    - name: Test
#      run: dotnet test --no-build --verbosity normal
    
    - name: Publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/animal-adoption-portal
      

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
      # Artifact name
        name: a
       # A file, directory or wildcard pattern that describes what to upload
        path: ${{env.DOTNET_ROOT}}/animal-adoption-portal/*
       # The desired behavior if no files are found using the provided path.
#   deploy:
#     env:
#       ResourceGroupName : test
#       ResourceGroupLoaction: koreacentral
      
#     runs-on: ubuntu-latest
#     # needs:build 는 build 과정이 끝난 후 하단의 코드 실행함을 의미 
#     needs: build
#     environment:
#       name: 'production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

#     steps:
#     - name: Download artifact from build job
#       uses: actions/download-artifact@v2
#       with:
#         name: a
            
#     - name: AzureLogin
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}
#     - uses: Azure/get-keyvault-secrets@v1
#       with:
#         keyvault: "yuritest"
#         secrets: 'yurikey'  # comma separated list of secret keys that need to be fetched from the Key Vault 
#         id: myGetSecretAction
#     - uses: Azure/CLI@v1
#       with:
#         inlineScript: |
#           #!/bin/bash
#           if $(az group exists --name ${{ env.ResourceGroupName }}) ; then
#             echo "Azure resource group already exists, skipping creation..."
#           else
#             az group create --name ${{ env.ResourceGroupName }} --location ${{ env.ResourceGroupLocation }}
#             echo "Azure resource group created"
#           fi
#     - uses: azure/arm-deploy@v1
#       with:
#         resourceGroupName: ${{ env.ResourceGroupName }}
#         template: https://animaltest.blob.core.windows.net/animal/Deploy.json

#     - uses: Azure/appservice-settings@v1
#       with:
#     # Name of the Azure Web App
#         app-name: 'AnimalWeb'
#     # Name of an existing slot other than the production slot. Default value is production
#         slot-name: 'production'
#     # Application settings using the JSON syntax set as value of secret variable: APP_SETTINGS
#         app-settings-json: ${{ secrets.APP_SETTINGS }} 
#         id: settings
        
#     - uses: Azure/webapps-deploy@v2
#       with:
#     # Name of the Azure Web App
#        app-name: 'AnimalWeb'
#     # Enter an existing Slot other than the Production slot
#        slot-name: 'production'
#     # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
#        package: .
